version: '3'

networks:
  mynet1:
    name: mynet1

volumes:
  elasticsearch-data:
    driver: local
  fluentd-logs:
    driver: local
  postgres-data:
    driver: local
  postgres-logs:
    driver: local
  backend-logs:
    driver: local

services:
  backend:
    build:
      context: ./backend # 這邊是指路徑的意思
      dockerfile: Dockerfile #單純的檔案名稱
    ports:
      - '8080:8080'
    depends_on: # 在這個服務起來之後，才會啟動當前的服務
      - fluentd
    volumes:
      - backend-logs:/var/log/oms
    networks:
      - mynet1
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: '127.0.0.1:24224'
        tag: backend

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - mynet1
    logging:
      driver: 'fluentd'
      options:
        fluentd-address: '127.0.0.1:24224'
        tag: frontend

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - '5432:5432'
    volumes: # 將 db-data 裡面的 postgres 的資料，跟容器裡 :後這個路徑理的東西，掛載，就是量子糾纏
      # 必須要掛載是因為如果 container 停止或是刪除，那資料也會一併刪除
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro # 掛載到指定的 initdb.d 這個資料夾，根據 postgres 官方的 images ，會來這個資料夾找 .sql 的檔案，並且執行
      - postgres-logs:/var/log/postgresql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mynet1

  fluentd:
    build:
      context: ./fluentd
      dockerfile: Dockerfile
    image: ntw/fluentd
    container_name: fluentd
    hostname: fluentd
    networks:
      - mynet1
    ports:
      - '24224:24224'
    volumes:
      - ${PWD}/fluent.conf:/fluentd/etc/fluent.conf
      - fluentd-logs:/fluentd/log
    depends_on:
      - 'elasticsearch'
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.13.2
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - 'discovery.type=single-node'
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
      - 'xpack.security.enabled=false'
    expose:
      - '9200'
    ports:
      - '9200:9200'
    networks:
      - mynet1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    restart: unless-stopped

  kibana:
    image: kibana:7.13.2
    container_name: kibana
    hostname: kibana
    ports:
      - '5601:5601'
    networks:
      - mynet1
    environment:
      - ELASTICSEARCH_HOSTS="http://elasticsearch:9200"
    restart: unless-stopped
    depends_on:
      - 'elasticsearch'
